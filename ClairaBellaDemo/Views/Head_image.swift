//
//  Head_image.swift
//
//  Created on 17/05/17.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

import UIKit



class Head_image: NSObject {
    
    
    //MARK: - Canvas Drawings
    
    /// Page 3
    
    class func drawPage3() {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// head
        do {
            context.saveGState()
            context.translateBy(x: 7, y: -9)
            
            /// skin-tone
            do {
                context.saveGState()
                context.translateBy(x: 1, y: 1)
                
                /// Oval
                let oval = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 145.74, height: 145.74))
                context.saveGState()
                context.translateBy(x: 0.9, y: 0.31)
                UIColor(hue: 0.06, saturation: 0.201, brightness: 0.976, alpha: 1).setFill()
                oval.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// main-colour
            do {
                context.saveGState()
                context.translateBy(x: 60, y: 110)
                
                /// Shape
                let shape = UIBezierPath()
                shape.move(to: CGPoint(x: 0.03, y: 11.41))
                shape.addCurve(to: CGPoint(x: 4.03, y: 1.33), controlPoint1: CGPoint(x: -0.23, y: 7.66), controlPoint2: CGPoint(x: 1.32, y: 3.27))
                shape.addCurve(to: CGPoint(x: 14.24, y: 3.91), controlPoint1: CGPoint(x: 6.74, y: -0.61), controlPoint2: CGPoint(x: 10.49, y: -0.48))
                shape.addCurve(to: CGPoint(x: 24.96, y: 1.33), controlPoint1: CGPoint(x: 18.12, y: -0.35), controlPoint2: CGPoint(x: 21.86, y: -1))
                shape.addCurve(to: CGPoint(x: 28.84, y: 11.54), controlPoint1: CGPoint(x: 28.06, y: 3.66), controlPoint2: CGPoint(x: 29.22, y: 7.53))
                shape.addCurve(to: CGPoint(x: 14.24, y: 23.34), controlPoint1: CGPoint(x: 28.46, y: 15.55), controlPoint2: CGPoint(x: 25.69, y: 23.34))
                shape.addCurve(to: CGPoint(x: 0.03, y: 11.41), controlPoint1: CGPoint(x: 2.79, y: 23.34), controlPoint2: CGPoint(x: 0.28, y: 15.16))
                shape.close()
                shape.move(to: CGPoint(x: 0.03, y: 11.41))
                context.saveGState()
                context.translateBy(x: 0.31, y: 0.66)
                UIColor(hue: 0.003, saturation: 0.246, brightness: 0.91, alpha: 1).setFill()
                shape.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// fixed-colours
            do {
                context.saveGState()
                context.translateBy(x: 8, y: 37)
                
                /// Shape
                let shape2 = UIBezierPath()
                shape2.move(to: CGPoint(x: 52.55, y: 16))
                shape2.addCurve(to: CGPoint(x: 32.5, y: 1.88), controlPoint1: CGPoint(x: 47.28, y: 9.55), controlPoint2: CGPoint(x: 40.35, y: 4.67))
                shape2.addCurve(to: CGPoint(x: 2.87, y: 3.76), controlPoint1: CGPoint(x: 19.66, y: -2.56), controlPoint2: CGPoint(x: 5.81, y: 2.05))
                shape2.addCurve(to: CGPoint(x: 0.2, y: 9.39), controlPoint1: CGPoint(x: -0.07, y: 5.47), controlPoint2: CGPoint(x: -0.29, y: 7.91))
                shape2.addCurve(to: CGPoint(x: 5.63, y: 11.17), controlPoint1: CGPoint(x: 0.69, y: 10.87), controlPoint2: CGPoint(x: 3.2, y: 11.76))
                shape2.addCurve(to: CGPoint(x: 21.43, y: 6.23), controlPoint1: CGPoint(x: 8.06, y: 10.58), controlPoint2: CGPoint(x: 14.72, y: 6.82))
                shape2.addCurve(to: CGPoint(x: 52.55, y: 16), controlPoint1: CGPoint(x: 28.14, y: 5.64), controlPoint2: CGPoint(x: 42.37, y: 7.55))
                shape2.close()
                shape2.move(to: CGPoint(x: 52.55, y: 16))
                context.saveGState()
                context.translateBy(x: 81.32, y: 0)
                UIColor(hue: 0.05, saturation: 0.45, brightness: 0.671, alpha: 1).setFill()
                shape2.fill()
                context.restoreGState()
                
                /// Shape
                let shape3 = UIBezierPath()
                shape3.move(to: CGPoint(x: 0, y: 16))
                shape3.addCurve(to: CGPoint(x: 20.05, y: 1.88), controlPoint1: CGPoint(x: 5.27, y: 9.55), controlPoint2: CGPoint(x: 12.21, y: 4.67))
                shape3.addCurve(to: CGPoint(x: 49.68, y: 3.76), controlPoint1: CGPoint(x: 32.89, y: -2.56), controlPoint2: CGPoint(x: 46.74, y: 2.05))
                shape3.addCurve(to: CGPoint(x: 52.35, y: 9.39), controlPoint1: CGPoint(x: 52.62, y: 5.47), controlPoint2: CGPoint(x: 52.84, y: 7.91))
                shape3.addCurve(to: CGPoint(x: 46.92, y: 11.17), controlPoint1: CGPoint(x: 51.86, y: 10.87), controlPoint2: CGPoint(x: 49.35, y: 11.76))
                shape3.addCurve(to: CGPoint(x: 31.12, y: 6.23), controlPoint1: CGPoint(x: 44.49, y: 10.58), controlPoint2: CGPoint(x: 37.83, y: 6.82))
                shape3.addCurve(to: CGPoint(x: 0, y: 16), controlPoint1: CGPoint(x: 24.41, y: 5.64), controlPoint2: CGPoint(x: 10.19, y: 7.55))
                shape3.close()
                shape3.move(to: CGPoint(x: 0, y: 16))
                context.saveGState()
                context.translateBy(x: 0, y: 0)
                UIColor(hue: 0.05, saturation: 0.45, brightness: 0.671, alpha: 1).setFill()
                shape3.fill()
                context.restoreGState()
                
                /// Oval
                let oval2 = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 21.96, height: 21.96))
                context.saveGState()
                context.translateBy(x: 22.43, y: 69.32)
                UIColor(hue: 0.003, saturation: 0.246, brightness: 0.91, alpha: 1).setFill()
                oval2.fill()
                context.restoreGState()
                
                /// Oval
                let oval3 = UIBezierPath(ovalIn: CGRect(x: 0, y: 0, width: 21.96, height: 21.96))
                context.saveGState()
                context.translateBy(x: 89.14, y: 69.32)
                UIColor(hue: 0.003, saturation: 0.246, brightness: 0.91, alpha: 1).setFill()
                oval3.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// highlights
            do {
                context.saveGState()
                context.translateBy(x: 1, y: 1)
                
                /// Shape
                let shape4 = UIBezierPath()
                shape4.move(to: CGPoint(x: 9.66, y: 73.06))
                shape4.addCurve(to: CGPoint(x: 77.89, y: 0.18), controlPoint1: CGPoint(x: 9.67, y: 34.59), controlPoint2: CGPoint(x: 39.5, y: 2.72))
                shape4.addCurve(to: CGPoint(x: 73.06, y: 0), controlPoint1: CGPoint(x: 76.29, y: 0.08), controlPoint2: CGPoint(x: 74.68, y: 0))
                shape4.addCurve(to: CGPoint(x: 0, y: 73.06), controlPoint1: CGPoint(x: 32.71, y: 0), controlPoint2: CGPoint(x: 0, y: 32.71))
                shape4.addCurve(to: CGPoint(x: 73.06, y: 146.12), controlPoint1: CGPoint(x: 0, y: 113.41), controlPoint2: CGPoint(x: 32.71, y: 146.12))
                shape4.addCurve(to: CGPoint(x: 77.89, y: 145.94), controlPoint1: CGPoint(x: 74.69, y: 146.12), controlPoint2: CGPoint(x: 76.29, y: 146.05))
                shape4.addCurve(to: CGPoint(x: 9.66, y: 73.06), controlPoint1: CGPoint(x: 39.5, y: 143.4), controlPoint2: CGPoint(x: 9.67, y: 111.53))
                shape4.addLine(to: CGPoint(x: 9.66, y: 73.06))
                shape4.close()
                shape4.move(to: CGPoint(x: 9.66, y: 73.06))
                context.saveGState()
                context.setAlpha(0.5)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    context.translateBy(x: 0.71, y: 0.12)
                    UIColor.white.setFill()
                    shape4.fill()
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
                /// Shape
                let shape5 = UIBezierPath()
                shape5.move(to: CGPoint(x: 68.23, y: 73.06))
                shape5.addCurve(to: CGPoint(x: 0, y: 0.18), controlPoint1: CGPoint(x: 68.22, y: 34.59), controlPoint2: CGPoint(x: 38.39, y: 2.72))
                shape5.addCurve(to: CGPoint(x: 4.83, y: 0), controlPoint1: CGPoint(x: 1.6, y: 0.08), controlPoint2: CGPoint(x: 3.21, y: 0))
                shape5.addCurve(to: CGPoint(x: 68.1, y: 36.53), controlPoint1: CGPoint(x: 30.93, y: -0), controlPoint2: CGPoint(x: 55.05, y: 13.93))
                shape5.addCurve(to: CGPoint(x: 68.1, y: 109.59), controlPoint1: CGPoint(x: 81.15, y: 59.13), controlPoint2: CGPoint(x: 81.15, y: 86.99))
                shape5.addCurve(to: CGPoint(x: 4.83, y: 146.12), controlPoint1: CGPoint(x: 55.05, y: 132.19), controlPoint2: CGPoint(x: 30.93, y: 146.12))
                shape5.addCurve(to: CGPoint(x: 0, y: 145.94), controlPoint1: CGPoint(x: 3.2, y: 146.12), controlPoint2: CGPoint(x: 1.6, y: 146.05))
                shape5.addCurve(to: CGPoint(x: 68.23, y: 73.06), controlPoint1: CGPoint(x: 38.39, y: 143.4), controlPoint2: CGPoint(x: 68.22, y: 111.53))
                shape5.close()
                shape5.move(to: CGPoint(x: 68.23, y: 73.06))
                context.saveGState()
                context.setAlpha(0.5)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    context.translateBy(x: 68.93, y: 0.12)
                    UIColor.white.setFill()
                    shape5.fill()
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
                /// Shape
                let shape6 = UIBezierPath()
                shape6.move(to: CGPoint(x: 6.48, y: 3.06))
                shape6.addCurve(to: CGPoint(x: 3.24, y: 3.06), controlPoint1: CGPoint(x: 6.48, y: 4.85), controlPoint2: CGPoint(x: 5.03, y: 3.06))
                shape6.addCurve(to: CGPoint(x: 0, y: 3.06), controlPoint1: CGPoint(x: 1.45, y: 3.06), controlPoint2: CGPoint(x: 0, y: 4.84))
                shape6.addCurve(to: CGPoint(x: 3.24, y: 0), controlPoint1: CGPoint(x: 0.1, y: 1.34), controlPoint2: CGPoint(x: 1.52, y: 0))
                shape6.addCurve(to: CGPoint(x: 6.47, y: 3.06), controlPoint1: CGPoint(x: 4.95, y: 0), controlPoint2: CGPoint(x: 6.37, y: 1.34))
                shape6.addLine(to: CGPoint(x: 6.48, y: 3.06))
                shape6.close()
                shape6.move(to: CGPoint(x: 6.48, y: 3.06))
                context.saveGState()
                context.setAlpha(0.5)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    context.translateBy(x: 63.59, y: 112.94)
                    UIColor.white.setFill()
                    shape6.fill()
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
                /// Shape
                let shape7 = UIBezierPath()
                shape7.move(to: CGPoint(x: 0, y: 3.06))
                shape7.addCurve(to: CGPoint(x: 3.24, y: 3.06), controlPoint1: CGPoint(x: 0, y: 4.85), controlPoint2: CGPoint(x: 1.45, y: 3.06))
                shape7.addCurve(to: CGPoint(x: 6.48, y: 3.06), controlPoint1: CGPoint(x: 5.03, y: 3.06), controlPoint2: CGPoint(x: 6.48, y: 4.84))
                shape7.addCurve(to: CGPoint(x: 3.25, y: 0), controlPoint1: CGPoint(x: 6.38, y: 1.34), controlPoint2: CGPoint(x: 4.96, y: 0))
                shape7.addCurve(to: CGPoint(x: 0.01, y: 3.06), controlPoint1: CGPoint(x: 1.53, y: 0), controlPoint2: CGPoint(x: 0.11, y: 1.34))
                shape7.addLine(to: CGPoint(x: 0, y: 3.06))
                shape7.close()
                shape7.move(to: CGPoint(x: 0, y: 3.06))
                context.saveGState()
                context.setAlpha(0.5)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    context.translateBy(x: 77.46, y: 112.94)
                    UIColor.white.setFill()
                    shape7.fill()
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
                /// Shape
                let shape8 = UIBezierPath()
                shape8.move(to: CGPoint(x: 16.36, y: 0.59))
                shape8.addCurve(to: CGPoint(x: 8.18, y: 2.92), controlPoint1: CGPoint(x: 16.36, y: 1.88), controlPoint2: CGPoint(x: 12.7, y: 2.92))
                shape8.addCurve(to: CGPoint(x: 0, y: 0.59), controlPoint1: CGPoint(x: 3.66, y: 2.92), controlPoint2: CGPoint(x: 0, y: 1.92))
                shape8.addCurve(to: CGPoint(x: 8.18, y: 0.59), controlPoint1: CGPoint(x: 0, y: -0.74), controlPoint2: CGPoint(x: 3.66, y: 0.59))
                shape8.addCurve(to: CGPoint(x: 16.36, y: 0.59), controlPoint1: CGPoint(x: 12.7, y: 0.59), controlPoint2: CGPoint(x: 16.36, y: -0.7))
                shape8.close()
                shape8.move(to: CGPoint(x: 16.36, y: 0.59))
                context.saveGState()
                context.setAlpha(0.5)
                context.beginTransparencyLayer(auxiliaryInfo: nil)
                do {
                    context.translateBy(x: 65.59, y: 125.26)
                    UIColor.white.setFill()
                    shape8.fill()
                }
                context.endTransparencyLayer()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// outline
            do {
                context.saveGState()
                
                /// Shape
                let shape9 = UIBezierPath()
                shape9.move(to: CGPoint(x: 13.22, y: 2.48))
                shape9.addCurve(to: CGPoint(x: 0, y: 4.41), controlPoint1: CGPoint(x: 5.22, y: -4.06), controlPoint2: CGPoint(x: 0, y: 4.41))
                shape9.addCurve(to: CGPoint(x: 13.22, y: 5.6), controlPoint1: CGPoint(x: 8, y: -1.68), controlPoint2: CGPoint(x: 13.22, y: 5.6))
                shape9.addCurve(to: CGPoint(x: 26.44, y: 4.41), controlPoint1: CGPoint(x: 13.22, y: 5.6), controlPoint2: CGPoint(x: 18.42, y: -1.68))
                shape9.addCurve(to: CGPoint(x: 13.22, y: 2.48), controlPoint1: CGPoint(x: 26.45, y: 4.41), controlPoint2: CGPoint(x: 21.24, y: -4.06))
                shape9.close()
                shape9.move(to: CGPoint(x: 13.22, y: 2.48))
                context.saveGState()
                context.translateBy(x: 61.55, y: 95.17)
                UIColor.black.setFill()
                shape9.fill()
                context.restoreGState()
                
                /// Shape
                let shape10 = UIBezierPath()
                shape10.move(to: CGPoint(x: 36.16, y: 11.51))
                shape10.addCurve(to: CGPoint(x: 25.69, y: 0.15), controlPoint1: CGPoint(x: 36.31, y: 2.42), controlPoint2: CGPoint(x: 30.06, y: -0.77))
                shape10.addCurve(to: CGPoint(x: 20.55, y: 3.71), controlPoint1: CGPoint(x: 22.69, y: 0.78), controlPoint2: CGPoint(x: 20.55, y: 3.71))
                shape10.addCurve(to: CGPoint(x: 15.41, y: 0.15), controlPoint1: CGPoint(x: 20.55, y: 3.71), controlPoint2: CGPoint(x: 18.41, y: 0.79))
                shape10.addCurve(to: CGPoint(x: 4.94, y: 11.51), controlPoint1: CGPoint(x: 11.05, y: -0.77), controlPoint2: CGPoint(x: 4.79, y: 2.42))
                shape10.addCurve(to: CGPoint(x: 0, y: 9.14), controlPoint1: CGPoint(x: 3.23, y: 10.87), controlPoint2: CGPoint(x: 1.57, y: 10.07))
                shape10.addCurve(to: CGPoint(x: 5, y: 12.67), controlPoint1: CGPoint(x: 1.44, y: 10.61), controlPoint2: CGPoint(x: 3.13, y: 11.81))
                shape10.addCurve(to: CGPoint(x: 20.54, y: 25.44), controlPoint1: CGPoint(x: 5.76, y: 21.67), controlPoint2: CGPoint(x: 14, y: 25.44))
                shape10.addCurve(to: CGPoint(x: 36.08, y: 12.67), controlPoint1: CGPoint(x: 27.08, y: 25.44), controlPoint2: CGPoint(x: 35.32, y: 21.66))
                shape10.addCurve(to: CGPoint(x: 41.08, y: 9.14), controlPoint1: CGPoint(x: 37.95, y: 11.81), controlPoint2: CGPoint(x: 39.64, y: 10.61))
                shape10.addCurve(to: CGPoint(x: 36.16, y: 11.51), controlPoint1: CGPoint(x: 39.51, y: 10.07), controlPoint2: CGPoint(x: 37.87, y: 10.87))
                shape10.close()
                shape10.move(to: CGPoint(x: 33.63, y: 15.15))
                shape10.addCurve(to: CGPoint(x: 20.56, y: 23.46), controlPoint1: CGPoint(x: 32.17, y: 21.08), controlPoint2: CGPoint(x: 23.72, y: 23.46))
                shape10.addCurve(to: CGPoint(x: 7.49, y: 15.15), controlPoint1: CGPoint(x: 17.4, y: 23.46), controlPoint2: CGPoint(x: 8.95, y: 21.08))
                shape10.addCurve(to: CGPoint(x: 7.21, y: 13.6), controlPoint1: CGPoint(x: 7.37, y: 14.64), controlPoint2: CGPoint(x: 7.27, y: 14.12))
                shape10.addCurve(to: CGPoint(x: 33.91, y: 13.6), controlPoint1: CGPoint(x: 15.85, y: 16.64), controlPoint2: CGPoint(x: 25.27, y: 16.64))
                shape10.addCurve(to: CGPoint(x: 33.62, y: 15.15), controlPoint1: CGPoint(x: 33.84, y: 14.12), controlPoint2: CGPoint(x: 33.75, y: 14.64))
                shape10.addLine(to: CGPoint(x: 33.63, y: 15.15))
                shape10.close()
                shape10.move(to: CGPoint(x: 20.56, y: 14.03))
                shape10.addCurve(to: CGPoint(x: 7.1, y: 12.26), controlPoint1: CGPoint(x: 16.01, y: 14.12), controlPoint2: CGPoint(x: 11.47, y: 13.52))
                shape10.addCurve(to: CGPoint(x: 12.39, y: 2.35), controlPoint1: CGPoint(x: 6.95, y: 7.5), controlPoint2: CGPoint(x: 9.31, y: 3.43))
                shape10.addCurve(to: CGPoint(x: 20.56, y: 6.48), controlPoint1: CGPoint(x: 16.46, y: 0.92), controlPoint2: CGPoint(x: 20.56, y: 6.48))
                shape10.addLine(to: CGPoint(x: 20.56, y: 6.48))
                shape10.addCurve(to: CGPoint(x: 28.73, y: 2.35), controlPoint1: CGPoint(x: 20.56, y: 6.48), controlPoint2: CGPoint(x: 24.66, y: 0.92))
                shape10.addCurve(to: CGPoint(x: 34.02, y: 12.26), controlPoint1: CGPoint(x: 31.8, y: 3.43), controlPoint2: CGPoint(x: 34.16, y: 7.5))
                shape10.addCurve(to: CGPoint(x: 20.56, y: 14.03), controlPoint1: CGPoint(x: 29.65, y: 13.52), controlPoint2: CGPoint(x: 25.11, y: 14.12))
                shape10.addLine(to: CGPoint(x: 20.56, y: 14.03))
                shape10.close()
                shape10.move(to: CGPoint(x: 20.56, y: 14.03))
                context.saveGState()
                context.translateBy(x: 54.21, y: 109.69)
                UIColor.black.setFill()
                shape10.fill()
                context.restoreGState()
                
                /// Shape
                let shape11 = UIBezierPath()
                shape11.move(to: CGPoint(x: 73.86, y: 147.72))
                shape11.addCurve(to: CGPoint(x: 0, y: 73.86), controlPoint1: CGPoint(x: 33.07, y: 147.72), controlPoint2: CGPoint(x: 0, y: 114.65))
                shape11.addCurve(to: CGPoint(x: 73.86, y: 0), controlPoint1: CGPoint(x: 0, y: 33.07), controlPoint2: CGPoint(x: 33.07, y: 0))
                shape11.addCurve(to: CGPoint(x: 147.72, y: 73.86), controlPoint1: CGPoint(x: 114.65, y: 0), controlPoint2: CGPoint(x: 147.72, y: 33.07))
                shape11.addCurve(to: CGPoint(x: 73.86, y: 147.72), controlPoint1: CGPoint(x: 147.68, y: 114.63), controlPoint2: CGPoint(x: 114.63, y: 147.68))
                shape11.addLine(to: CGPoint(x: 73.86, y: 147.72))
                shape11.close()
                shape11.move(to: CGPoint(x: 73.86, y: 2.48))
                shape11.addCurve(to: CGPoint(x: 2.48, y: 73.86), controlPoint1: CGPoint(x: 34.44, y: 2.48), controlPoint2: CGPoint(x: 2.48, y: 34.44))
                shape11.addCurve(to: CGPoint(x: 73.86, y: 145.24), controlPoint1: CGPoint(x: 2.48, y: 113.28), controlPoint2: CGPoint(x: 34.44, y: 145.24))
                shape11.addCurve(to: CGPoint(x: 145.24, y: 73.86), controlPoint1: CGPoint(x: 113.28, y: 145.24), controlPoint2: CGPoint(x: 145.24, y: 113.28))
                shape11.addCurve(to: CGPoint(x: 73.86, y: 2.52), controlPoint1: CGPoint(x: 145.17, y: 34.47), controlPoint2: CGPoint(x: 113.25, y: 2.56))
                shape11.addLine(to: CGPoint(x: 73.86, y: 2.48))
                shape11.close()
                shape11.move(to: CGPoint(x: 73.86, y: 2.48))
                context.saveGState()
                context.translateBy(x: 0.9, y: 0.28)
                UIColor.black.setFill()
                shape11.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            context.restoreGState()
        }
    }
    
    
}

//func showConfirmBox(msg:String, title:String,
//                    firstBtnStr:String, firstSelector:(sampleParameter: String) -> returntype,
//                    secondBtnStr:String, secondSelector:() -> String,
//                    caller:UIViewController) {
//    //Your Code
//}

